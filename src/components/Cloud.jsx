/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
//import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";
//import { fadeOnBeforeCompile } from "../utils/fadeMaterial";

export function Cloud({ sceneOpacity, ...props }) {
  const { nodes, materials } = useGLTF("./models/cloud/model.gltf");

  const materialRef = useRef();

  /*
  useFrame(() => {
    materialRef.current.opacity = sceneOpacity.current;
  });
  */

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Mball001.geometry}>
        <meshStandardMaterial
          ref={materialRef}
          onBeforeCompile={(shader) => {
            shader.fragmentShader = shader.fragmentShader.replace(
              `vec4 diffuseColor = vec4( diffuse, opacity );`,
              `float fadeDist = 200.0;
               float dist = length(vViewPosition);
               float fadeOpacity = smoothstep(fadeDist, 0.0, dist);
               vec4 diffuseColor = vec4( diffuse, fadeOpacity * opacity );`
            );
          }}
          envMapIntensity={2}
          transparent
          opacity={1}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/cloud/model.gltf");